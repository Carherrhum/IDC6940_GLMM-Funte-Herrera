---
title: "GLMM Maternal Mortality Federally- Summer 2025"
subtitle: "This is a Report Template"
author: "Carolyn Herrera & Catherine Funte (Advisor: Dr. Cohen)"
date: '`r Sys.Date()`'
format:
  html:
    code-fold: true
course: Capstone Projects in Data Science
bibliography: references.bib # file contains bibtex for references
#always_allow_html: true # this allows to get PDF with HTML features
self-contained: true
execute: 
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 72
---

Slides: [slides.html](slides.html){target="_blank"} ( Go to `slides.qmd`
to edit)

::: callout-important
**Remember:** Your goal is to make your audience understand and care
about your findings. By crafting a compelling story, you can effectively
communicate the value of your data science project.

Carefully read this template since it has instructions and tips to
writing!
:::

## Introduction


Generalized Linear Mixed Models (GLMMs) are a flexible class of statistical models that combine the features of two powerful tools: Generalized Linear Models (GLMs) and Mixed-Effects Models[@agresti2015foundations]. Like GLMs, GLMMs can model non-normal outcome variables, such as binary, count, or proportion data. However, they go a step further by incorporating random effects, which account for variation due to grouping or clustering in the data, correlated observations, and overdispersion.

In practical terms, GLMMs are especially useful when data points are not independent, such as when students are nested within schools, patients are treated within hospitals, or repeated measures are taken from the same subject over time. For example, Thall wrote that issues with longitudinal clinical trial basic count data from repeated measures taken from the same subject over time will have problems detecting comparable between subject outcomes because it can be difficult to determine if outcomes are time dependent or due to treatment groups, thus a general linear mixed model method may be utilized to represent dependence upon each patient, incorporate covariate data, create time as a function, account for variability between patients,and  be flexible and tractable [@thall1988mixed]. The random effects help model the correlation within clusters and allow for unobserved heterogeneityâ€”differences that are not captured by the measured covariates.

GLMMs are good for:

-  Handling hierarchical or grouped data (e.g., students within classrooms, patients within clinics)[@lee1996hierarchical]


-  Modeling non-normal outcomes, such as:


   -  Binary outcomes (using logistic GLMMs)[@wang2017generalized]


   -  Count data (using Poisson or negative binomial GLMMs)[@candy2000application]


   -  Proportions or rates [@salinas2023generalized]


-  Improving inference by accounting for both fixed effects (predictors of interest) and random effects (random variation across groups)


-  Reducing bias and inflated Type I error rates that can result from ignoring data structure[@thompson2022cluster]


GLMMs are ideal when your data is both complex in structure and involves non-Gaussian response variables, making them indispensable in fields like medicine, ecology, education, and social sciences. Tawiah et al describes zero-inflated Poisson GLMMs, an extension of Poisson GLMM that allows for overdispersion due to a prevalence of zeros in the data, common in health sector data[@tawiah2020zero]. The paper compares a Poisson GLM, a zero-inflated Poisson GLM, a Poisson GLMM, and a zero-inflated Poisson GLMM, applied to clustered maternal mortality data. Another paper by Owili et al utilizes a GLMM to investigate the impact of particulate matter on maternal and infant mortality globally [@owili2020impacts]. They use a Poisson link function and take year and country as random effects to account for differences in global data. 

We wish to analyze the data of federal maternal mortality deaths via VSRR Provisional Maternal Death Counts and Rates dataset by utilizing a General linear mixed model with Poisson link as it is count data. We wish to see if ethnicity (a fixed effect) has any influence upon maternal death count by year(random effect). Like other public health or clinical data there will be issues such as correlated observations and overdispersion but GLMM will be utilized to parse through the noise and determine if indeed there are some patterns of maternal mortality among mothers of differing ethnicties.



## Methods

#### Math Background

GLMMs can be considered an extension of GLMs, wherein a GLM includes the addition of random effects, or an extension of Linear Mixed Models (LMMs), where a linear model with fixed and random effects is extended for non-normal distributions. 
Let

- $\mathbf{y}$ be a $Nx1$ column vector outcome variable

- $\mathbf{X}$ be a $Nxp$ matrix for the $p$ predictor variables

- $\boldsymbol{\beta}$ be a $px1$ column vector of the fixed effects coefficients

- $\mathbf{Z}$ is a $Nxq$ matrix of the $q$ random effects

- $\mathbf{u}$ is a $qx1$ vector of random effects, and

- $\boldsymbol{\epsilon}$ is a $Nx1$ column vector of the residuals 

Then the general equation for the model is given by:

$$\mathbf{y}=\mathbf{X}\boldsymbol{\beta}+\mathbf{Z}\mathbf{u}+\boldsymbol{\epsilon}$$
[@salinas2023generalized].
GLMMs typically include a link function that relates the response variable $\mathbf{y}$ to a linear predictor, $\eta$, which excludes the residuals. So then
$$\boldsymbol{\eta}=\mathbf{X}\boldsymbol{\beta}+\mathbf{Z}\boldsymbol{\lambda}$$
The link function is $g(\cdot)$, where
$$g(E(\mathbf{y}))=\boldsymbol{\eta}$$
where $E(\mathbf{y})$ is the expectation of \mathbf{y}. The choice of link function depends on the outcome distribution. For this paper our data demonstrates a Negative Binomial distribution for count data, so we will use a log link function
$$g(\cdot)=log_e(\cdot)$$

#### Assumptions

Before deciding to use a GLMM for our data, we had to check some assumptions (specific to our negative binomial distributed data). 

- The response variable and the predictors have a linear relationship within the levels of random effects. 
- The response variable is assumed to follow a negative binomial distribution, with $\sigma^2>\mu$.
- The residuals and random effects are independent.
- The random effects are assumed to be normally distributed, with mean 0 and variance $\sigma$.


We installed package "lme4" to do analysis with the IDE R

## Analysis and Results

### Data Exploration and Visualization

-   Describe your data sources and collection process.

Data source is the VSSR Maternal Mortality. We collected by uploaded csv file into R. 

-   Present initial findings and insights through visualizations.

-   Highlight unexpected patterns or anomalies.

A study was conducted to determine how...

```{r, warning=FALSE, echo=T, message=FALSE}
# loading packages 
library(tidyverse)
library(knitr)
library(ggthemes)
library(ggrepel)
library(dslabs)
library(ggplot2)
library(patchwork) # For combining plots
library(ggpubr)
```

```{r, warning=FALSE, echo=TRUE}

df <- read.csv("data/VSRR_Provisional_Maternal_Death_Counts_and_Rates_20250726.csv")#loading data
#variables- Maternal.Deaths--outcome variable
#Live.Births---offset variable since it is maternal deaths per live births
#Subgroup- ethnicity and year of mother must be edited --- these are fixed
#Year.of.Death---random effect variable
#Summary
#renaming columns
df<-df%>% 
  rename(Year= Year.of.Death, Month= Month.of.Death, Maternal_Deaths= Maternal.Deaths, Live_Births= Live.Births, Maternal_Mortality_Rate= Maternal.Mortality.Rate, Time_Period= Time.Period, Month_Ending_Date= Month.Ending.Date, Data_As_Of= Data.As.Of) 
  
filtered_df<- df%>% filter(Maternal_Deaths > 0, Live_Births > 100) #Filtering out rare combinations
  
test_df <- na.omit(filtered_df)#filtered na

```

```{r}
#Summary Statistics
deaths_df <-test_df %>%
  mutate(Group_Subgroup = paste(Group, Subgroup, sep = ": "))#mutating groups


summary_table <- deaths_df %>%
  group_by(Year, Group_Subgroup) %>% #grouped by year, Group (Age, Ethnicity), Subgroup(listed the Group of Participant), and Maternal deaths for each Subgroup
  summarise(Total_Maternal_Deaths = sum(Maternal_Deaths, na.rm = TRUE), .groups = "drop")
#ethnicity= "Hispanic" #"American Indian or Alaska Native, Non-Hispanic", "Asian, Non-Hispanic", "Black, Non-Hispanic", "Native Hawaiian or Other Pacific Islander, Non-Hispanic", "White, Non-Hispanic"
#age = "Under 25 years"#"25-39 years"#"40 years and over"

summary_table



summary_mean_data <- deaths_df %>%
      group_by(Group_Subgroup) %>%
      summarise(Maternal_Deaths_Mean_Value = mean(Maternal_Deaths, na.rm = TRUE) ,.groups  ="drop")
summary_mean_data #summarize mean maternal irrespective of year

summary_yearmean_data <- deaths_df %>%
      group_by(Year, Group_Subgroup) %>%
      summarise(Maternal_Deaths_MeanbyYear_Value = mean(Maternal_Deaths, na.rm = TRUE) ,.groups  ="drop")
summary_yearmean_data #summarize mean with year

summary_median_data <- deaths_df %>%
      group_by(Group_Subgroup) %>%
  summarise(Maternal_Deaths_Median_Value= median(Maternal_Deaths, na.rm = TRUE) ,.groups = "drop")#irrespective of year

summary_median_data#summarize median maternal irrespective of year

summary_yearmedian_data <- deaths_df %>%
      group_by(Year, Group_Subgroup) %>%
  summarise(Maternal_Deaths_MedianbyYear_Value= median(Maternal_Deaths, na.rm = TRUE) ,.groups = "drop")

summary_yearmedian_data#summarize median with year

summary_iqr_data <-deaths_df%>%
  group_by(Group_Subgroup) %>%
  summarise (Maternal_Deaths_iqr= IQR(Maternal_Deaths, na.rm = TRUE),.groups = "drop")#irrespective of year

summary_iqr_data #summarize iqr irrespective of year

summary_yeariqr_data <-deaths_df%>%
  group_by(Year,Group_Subgroup) %>%
  summarise (Maternal_Deaths_iqryear= IQR(Maternal_Deaths ,na.rm = TRUE),.groups = "drop")
summary_yeariqr_data #sumarize iqr with year
```

```{r setup, include=FALSE}
options(repos = c(CRAN = "https://cloud.r-project.org"))#specify cran mirror
if (!require("lme4")) install.packages("lme4")#if required to install
library(lme4)#initiate from library
```

```{r}
#Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) ['glmerMod']
glmm_model <- glmer(
  Maternal_Deaths ~ Subgroup + (1 | Year) + offset(log(Live_Births)),
  data = test_df,
  family = poisson(link = "log")
)
glmm_model
```
```{r}
glmm_model_nooffset <- glmer(
  Maternal_Deaths ~ Subgroup + (1 | Year),
  data = test_df,
  family = poisson(link = "log")
)
glmm_model_nooffset
```


##check if model is overdisepersed'
```{r setup, include=FALSE}
options(repos = c(CRAN = "https://cloud.r-project.org"))#specify cran mirror
if (!require("performance")) install.packages("performance")#if required to install
library(performance)
```

```{r}
check_overdispersion(glmm_model)
check_overdispersion(glmm_model_nooffset)



```
##OverDispersion is detected with Poisson model thus we must use negative binomial model

```{r setup, include=FALSE}
options(repos = c(CRAN = "https://cloud.r-project.org"))#specify cran mirror
if (!require("glmmTMB")) install.packages("glmmTMB")#if required to install
library(glmmTMB)
```

```{r}
glmmodel_nb <- glmmTMB(
  Maternal_Deaths ~ Subgroup +  (1 | Year),
  offset= log(Live_Births),
  family = nbinom2,
  data = test_df
)
summary(glmmodel_nb)
```

```{r}
#no offset
glmmodel_nb_nooffset <- glmmTMB(
  Maternal_Deaths ~ Subgroup +  (1 | Year),
  family = nbinom2,
  data = test_df
)
summary(glmmodel_nb_nooffset)
```

```{r}
ethnicity_only_df <- test_df %>%
  filter(Subgroup %in% c(
    "Asian, Non-Hispanic",
    "Black, Non-Hispanic",
    "White, Non-Hispanic",
    "Hispanic",
    "American Indian or Alaska Native, Non-Hispanic",
    "Native Hawaiian or Other Pacific Islander, Non-Hispanic"
  ))

#ethnicity as factor
ethnicity_only_df$Subgroup <- as.factor(ethnicity_only_df$Subgroup)
ethnicity_only_df<-ethnicity_only_df %>%
  rename(Ethnicity= Subgroup)

```

```{r}
poissonmodel_glmm_ethnicity <- glmer(Maternal_Deaths ~ Ethnicity + offset(log(Live_Births)) + (1 | Year), 
                              family = poisson(link = "log"), 
                              data = ethnicity_only_df)
poissonmodel_glmm_ethnicity
```

```{r}
poissonmodel_glmm_ethnicity_nooffset <- glmer(Maternal_Deaths ~ Ethnicity  + (1 | Year), 
                              family = poisson(link = "log"), 
                              data = ethnicity_only_df)
poissonmodel_glmm_ethnicity_nooffset

```

```{r}
check_overdispersion(poissonmodel_glmm_ethnicity)
check_overdispersion(poissonmodel_glmm_ethnicity_nooffset)
```
##overdispersion still detected

```{r}

##with offset
ethnicityonly_glmmodel_nb <- glmmTMB(
  Maternal_Deaths ~  Ethnicity + (1 | Year),
  offset=log(Live_Births),
  family = nbinom2,
  data = ethnicity_only_df
)
summary(ethnicityonly_glmmodel_nb)
```
```{r}

###Without offset, Ethnicity as fixed effect, Year as random effect
ethnicityonly_glmmodel_nb2 <- glmmTMB(
  Maternal_Deaths ~  Ethnicity + (1 | Year),
  family = nbinom2,
  data = ethnicity_only_df
)
summary(ethnicityonly_glmmodel_nb2)
```

```{r setup, include=FALSE}
#options(repos = c(CRAN = "https://cloud.r-project.org"))
#if (!require("performance"))install.packages("performance")#if required to install
#library(performance)

#if (!require("DHARMa"))install.packages("DHARMa")#if required to install
#library(DHARMa)

#if (!require("sjPlot"))install.packages("sjPlot")#if required to install
#library(sjPlot)
```

```{r}
#performance::check_model(ethnicityonly_glmmodel_nb2)
```


### Modeling and Results

-   Explain your data preprocessing and cleaning steps.

-   Present your key findings in a clear and concise manner.

-   Use visuals to support your claims.

-   **Tell a story about what the data reveals.**

```{r}

```

### Conclusion

-   Summarize your key findings.

-   Discuss the implications of your results.

## References
